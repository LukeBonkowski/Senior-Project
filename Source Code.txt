/*Senior Project
 *Authors: Luke B., Ryan P. & Will S.
 *Version_Date:1_9/23/2018 (Base/Bluetooth)
 *Version_Date:2_11/12/2018 (Ultrasonic)
 *Version_Date:
 */

//Include Files
#include <stdint.h>
#include <stdbool.h>
#include <stdio.h>
#include <string.h>
#include "tm4c123gh6pm.h"
#include "inc/hw_ints.h"
#include "inc/hw_memmap.h"
#include "inc/hw_timer.h"
#include "inc/hw_types.h"

#include "driverlib/adc.h"
#include "driverlib/debug.h"
#include "driverlib/fpu.h"
#include "driverlib/gpio.h"
#include "driverlib/interrupt.h"
#include "driverlib/pin_map.h"
#include "driverlib/rom.h"
#include "driverlib/sysctl.h"
#include "driverlib/systick.h"
#include "driverlib/timer.h"
#include "driverlib/uart.h"

#include "utils/uartstdio.h"


#define RED_LED            GPIO_PIN_1  // PF1
#define GREEN_LED          GPIO_PIN_3  // PF2
#define BLUE_LED           GPIO_PIN_2  // PF3

//Internal Delay
uint32_t ui32Loop;
uint32_t MaxDelay = 200000;
uint8_t count = 0;
uint16_t i = 0;

uint8_t RedLedToggle = 0;
uint8_t GreenLedToggle = 0;
uint8_t BlueLedToggle = 0;

volatile uint32_t pulse=0;
volatile uint8_t echowait=0;

char string[50] = "Hi Will and Luke.";

void configUART(void);
void configUltrasonic(void);
void usInputInt(void);
void sendUltrasonic(void);
void receiveUltrasonic(void);

int main(void)
{
    //40 MHz PLL config (25 nsec)
    SysCtlClockSet(SYSCTL_SYSDIV_5|SYSCTL_USE_PLL|SYSCTL_OSC_MAIN|SYSCTL_XTAL_16MHZ);

    //Timer config
    SysCtlPeripheralEnable(SYSCTL_PERIPH_TIMER0);
    TimerConfigure(TIMER0_BASE, TIMER_CFG_PERIODIC_UP);
    TimerEnable(TIMER0_BASE,TIMER_A);

    //Enables Port F
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);

    //LED Configuration
    GPIOPinTypeGPIOOutput(GPIO_PORTF_BASE, RED_LED|BLUE_LED|GREEN_LED);

    configUART();
    configUltrasonic();

    /*while (count < 10)
    {
        for (i = 0; i < 50; i++)
        {
            while(UARTBusy(UART3_BASE)) {;}
            UARTCharPut(UART3_BASE, string[i]);
        }
        count++;
    }//*/

    GPIOPinWrite(GPIO_PORTF_BASE, GREEN_LED, GREEN_LED);
    while (1)
    {
        if (echowait != 1)
        {
            sendUltrasonic();
        }
        while (echowait != 0);
        pulse = (uint32_t)(0.025*pulse); //clock cycle correction
        pulse = pulse / 58; //convert to cm
        while(UARTBusy(UART3_BASE)) {;}
        UARTCharPut(UART3_BASE, pulse);
    }   //*/

    return 0;
}

void configUART(void)
{

    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOC);
    SysCtlPeripheralEnable(SYSCTL_PERIPH_UART3);
    //GPIOPinConfigure(GPIO_PC6_U3RX);
    GPIOPinConfigure(GPIO_PC7_U3TX);
    /*HWREG(GPIO_PORTC_BASE + GPIO_O_LOCK) = GPIO_LOCK_KEY;
    HWREG(GPIO_PORTC_BASE + GPIO_O_CR) |= 0x06;
    HWREG(GPIO_PORTC_BASE + GPIO_O_LOCK) = 0;
    HWREG(GPIO_PORTC_BASE + GPIO_O_LOCK) = GPIO_LOCK_KEY;
    HWREG(GPIO_PORTC_BASE + GPIO_O_CR) |= 0x07;
    HWREG(GPIO_PORTC_BASE + GPIO_O_LOCK) = 0;*/
    //GPIOPinTypeUART(GPIO_PORTC_BASE, GPIO_PIN_6 | GPIO_PIN_7);
    GPIOPinTypeUART(GPIO_PORTC_BASE, GPIO_PIN_7);
    while(!SysCtlPeripheralReady(SYSCTL_PERIPH_GPIOC))
    {
    }
    UARTConfigSetExpClk(UART3_BASE, SysCtlClockGet(), 9600, (UART_CONFIG_WLEN_8 | UART_CONFIG_STOP_ONE | UART_CONFIG_PAR_NONE));
}

void configUltrasonic(void)
{
    //Trig pin config
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
    GPIOPinTypeGPIOOutput(GPIO_PORTA_BASE, GPIO_PIN_3);

    //Echo pin config
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
    GPIOPinTypeGPIOOutput(GPIO_PORTA_BASE, GPIO_PIN_2);
    GPIOIntEnable(GPIO_PORTA_BASE, GPIO_PIN_2);
    GPIOIntTypeSet(GPIO_PORTA_BASE, GPIO_PIN_2, GPIO_BOTH_EDGES);
    GPIOIntRegister(GPIO_PORTA_BASE,usInputInt);
}

void usInputInt(void)
{
    GPIOIntClear(GPIO_PORTA_BASE, GPIO_PIN_2); //int clear

    if (GPIOPinRead(GPIO_PORTA_BASE, GPIO_PIN_2) == GPIO_PIN_2)
    {
        GPIOPinWrite(GPIO_PORTF_BASE, RED_LED, RED_LED);
        HWREG(TIMER0_BASE + TIMER_O_TAV) = 0;
        TimerEnable(TIMER0_BASE, TIMER_A);
        echowait = 1;
    }
    else
    {
        pulse = TimerValueGet(TIMER0_BASE, TIMER_A);
        TimerDisable(TIMER0_BASE, TIMER_A);
        echowait=0;
        GPIOPinWrite(GPIO_PORTF_BASE, RED_LED, 0);
    }
}

void sendUltrasonic(void)
{
    GPIOPinWrite(GPIO_PORTF_BASE, BLUE_LED, BLUE_LED);
    GPIOPinWrite(GPIO_PORTA_BASE, GPIO_PIN_3, GPIO_PIN_3);
    SysCtlDelay(400/3); //delay for 10us
    GPIOPinWrite(GPIO_PORTA_BASE, GPIO_PIN_3, ~GPIO_PIN_3);
    GPIOPinWrite(GPIO_PORTF_BASE, BLUE_LED, 0);
}